name: Build and Test

on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'
      - 'release/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    name: Build, Test, and Validate
    runs-on: ubuntu-latest
    
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      APPDATA: "/tmp"  # Set APPDATA to prevent warnings
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore ./Banana.sln
    
    - name: Build
      run: dotnet build ./Banana.sln --configuration Release --no-restore
    
    - name: Test
      run: dotnet test ./Banana.sln --configuration Release --no-build --verbosity normal
    
    # Create directory for PostgreSQL data if needed
    - name: Prepare PostgreSQL directory
      run: |
        mkdir -p ./.containers/db
        chmod -R 777 ./.containers
    
    # Start PostgreSQL for migration validation
    - name: Start PostgreSQL
      run: |
        docker compose -f docker-compose.ci.yml up -d db-postgres
        # Wait for PostgreSQL to be ready
        sleep 10
    
    # Install FluentMigrator CLI
    - name: Install FluentMigrator CLI
      run: dotnet tool install --global FluentMigrator.DotNet.Cli
    
    # Apply migrations
    - name: Apply migrations
      run: |
        dotnet fm migrate -p PostgreSQL -c "Host=localhost;Database=banana;Username=postgres;Password=postgres" -a ./src/Bnn.Data/bin/Release/net9.0/Bnn.Data.dll
    
    # Stop PostgreSQL
    - name: Stop PostgreSQL
      if: always()  # Always run this step, even if previous steps fail
      run: docker compose -f docker-compose.ci.yml down
